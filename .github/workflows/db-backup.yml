name: Nightly DB dump to Supabase Storage

on:
  schedule:
    - cron: '0 8 * * *'   # 08:00 UTC ≈ 01:00 Mazatlán
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - name: Install tools (pg_dump + dig + getent + curl)
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client dnsutils libc-bin jq

      - name: Resolve host (sanitize + IPv4 fallback) and dump
        env:
          PGHOST: ${{ secrets.PGHOST }}         # ej: db.gayefhypecduuosazanz.supabase.co
          PGPORT: ${{ secrets.PGPORT }}         # 5432
          PGDATABASE: ${{ secrets.PGDATABASE }} # postgres
          PGUSER: ${{ secrets.PGUSER }}         # postgres
          PGPASSWORD: ${{ secrets.PGPASSWORD }} # reset en Supabase
        run: |
          set -e

          # 0) Sanitizar host: quitar http(s), paths y puertos si los hubiera
          HOST_CLEAN="$(printf '%s' "$PGHOST" | sed -E 's~^https?://~~; s~/.*$~~; s/:.*$//')"
          if [ -z "$HOST_CLEAN" ]; then
            echo "PGHOST vacío tras sanitizar"; exit 1
          fi
          echo "Host limpio: $HOST_CLEAN"

          # 1) Resolver IPv4 con Cloudflare, luego DNS por defecto
          IPV4="$(dig +short A "$HOST_CLEAN" @1.1.1.1 | head -n1)"
          if [ -z "$IPV4" ]; then
            IPV4="$(dig +short A "$HOST_CLEAN" | head -n1 || true)"
          fi
          # 2) Último intento con getent
          if [ -z "$IPV4" ]; then
            IPV4="$(getent hosts "$HOST_CLEAN" | awk '{print $1}' | head -n1 || true)"
          fi

          if [ -n "$IPV4" ]; then
            echo "IPv4 resuelta: $IPV4"
            HOST_FOR_CONN="$IPV4"
          else
            echo "No pude resolver IPv4. Usaré el hostname directo con IPv4 forzada en pg_dump."
            HOST_FOR_CONN="$HOST_CLEAN"
          fi

          # 3) Dump en formato personalizado, SSL requerido
          TS=$(date -u +'%Y-%m-%dT%H-%M-%SZ')
          FILE="db_${TS}.dump"

          # Forzar IPv4 (-4). Si usamos IP ya es IPv4; si usamos hostname,
          # -4 obliga conexión IPv4. SSL obligatorio.
          PGSSLMODE=require pg_dump -Fc -w -h "$HOST_FOR_CONN" -p "$PGPORT" -U "$PGUSER" -d "$PGDATABASE" -4 --no-owner -f "$FILE"

          echo "FILE=$FILE" >> $GITHUB_ENV

      - name: Upload to Supabase Storage (db_dumps)
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          set -e
          BUCKET=db_dumps
          FOLDER=$(date -u +'%Y/%m/%d')
          PATH_OBJ="$FOLDER/${{ env.FILE }}"
          curl -sS -X POST "$SUPABASE_URL/storage/v1/object/$BUCKET/$PATH_OBJ" \
            -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
            -H "Content-Type: application/octet-stream" \
            --data-binary "@${{ env.FILE }}"
          echo "✅ Subido como: $PATH_OBJ"
